- hosts: localhost
  gather_facts: no
  vars_files:
    - vars/aws.yml
    - vars/ec2secrets.yml
  tasks:
    - name: Creating an EC2 key pair
      ec2_key:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        name: ansible-django
        region: "{{ region }}"
        wait: yes
      register: ec2_key

    - name: Copying private key to current working dir
      copy:
        content: "{{ ec2_key.key.private_key }}"
        dest: "{{ ec2_key.key.name }}.pem"
        mode: 0600
      when: ec2_key.changed

    - name: Getting file information for private key on local host
      stat:
        path: "./{{ ec2_key.key.name }}.pem"
      delegate_to: localhost
      register: ec2_key_st

    - name: Checking private key availability and mode
      assert:
        that:
          - ec2_key_st.stat.exists
          - ec2_key_st.stat.mode == "0600"
        success_msg: "{{ ec2_key.key.name }}.pem is present and has correct mode"
        fail_msg: |
          Local copy of EC2 keypair "{{ ec2_key.key.name }}.pem" is missing or mode has been modified.
          If present, set mode to 0600 and re-run playbook.
          If missing, delete from AWS console and re-run playbook.

    - name: Finding IP address
      command: "/usr/bin/dig +short myip.opendns.com @resolver1.opendns.com"
      register: myip

    - name: Creating EC2 security group
      ec2_group:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        description: "Security group for ansible-django test app"
        name: "ansible-django"
        region: "{{ region }}"
        rules:
          - proto: tcp
            from_port: 8080
            to_port: 8080
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: "{{ myip.stdout }}/32"
        vpc_id: "{{ vpc_id }}"
      register: ec2_group

    - name: Provisioning an EC2 instance
      ec2_instance:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        image_id: ami-026c8acd92718196b  # ubuntu 18.04
        instance_ids:
          - i-ko3a15s43iaa  # random id to keep playbook idempotent
        instance_type: t2.micro
        key_name: "{{ ec2_key.key.name }}"
        name: "{{ instance_tags__name }}"
        region: "{{ region }}"
        security_group: "{{ ec2_group.group_name }}"
        state: running
        wait: yes
      register: ec2

    - name: Adding all instance public IPs to host group
      add_host:
        hostname: "{{ item.public_ip_address }}"
        groups: ec2hosts
      loop: "{{ ec2.instances }}"

- hosts: ec2hosts
  remote_user: ubuntu
  become: yes
  gather_facts: no
  vars:
    ansible_python_interpreter: /usr/bin/python3
    ansible_ssh_private_key_file: ./ansible-django.pem
  vars_files:
    - vars/github.yml
  tasks:
    - import_role:
        name: common
    - import_role:
        name: db
    - import_role:
        name: web
      vars:
        app_user: ubuntu
        repo_dir: /home/ubuntu/uwsgi-quickstart
    - name: Displaying completion message
      debug:
        msg: "View your app at {{ inventory_hostname }}:8080"
