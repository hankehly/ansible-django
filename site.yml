- hosts: localhost
  gather_facts: no
  vars_files:
    - secrets.yml
  tasks:
    - name: Provision an EC2 instance
      ec2:
        assign_public_ip: yes
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        key_name: ubuntu_18.04_LTS
        instance_type: t2.micro
        instance_tags:
          Name: test_instance
        id: i-ko3a15s43iaa # random (to keep playbook idempotent)
        image: ami-026c8acd92718196b
        region: us-east-1
        wait: yes
        vpc_subnet_id: subnet-6eaae561
        zone: us-east-1f
      register: ec2
    - name: Add all instance public IPs to host group
      add_host:
        hostname: "{{ item.public_ip }}"
        groups: ec2hosts
      loop: "{{ ec2.instances }}"
- hosts: ec2hosts
  remote_user: ubuntu
  become: yes
  gather_facts: no
  vars:
    app_user: ubuntu
    app_repo: "https://github.com/hankehly/uwsgi-quickstart.git"
    repo_dir: /home/ubuntu/uwsgi-quickstart
  vars_files:
    - secrets.yml
  tasks:
    - name: Wait for system to become reachable
      wait_for_connection:
    - name: Install python3 packages
      apt:
        name: "{{ packages }}"
        update_cache: yes
      vars:
        packages:
          - python3-pip
          - python3-dev
          - python3-pkg-resources
          - python3-setuptools
          - python3-venv
    - name: Install postgres
      apt:
        name: "{{ packages }}"
        update_cache: yes
      vars:
        packages:
          - libpq-dev
          - postgresql
          - postgresql-contrib
    - name: Install psycopg2
      pip:
        name: psycopg2
    - name: Create Postgres Database
      become: yes
      become_user: postgres
      postgresql_db:
        name: test_db
    - name: Create Postgres User
      become: yes
      become_user: postgres
      postgresql_user:
        db: test_db
        name: django
        password: password123
        priv: ALL
    - name: Install Nginx
      apt:
        name: nginx
        update_cache: yes
    - name: Make sure Nginx is running
      systemd:
        name: nginx
        state: started
        enabled: yes
    - name: Generate SSH key
      openssh_keypair:
        path: "/home/{{ app_user }}/.ssh/id_rsa"
        comment: "{{ app_user }}"
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
    - name: Read SSH public key to authorize
      shell: "cat /home/{{ app_user }}/.ssh/id_rsa.pub"
      register: ssh_pub_key
    - name: Authorize key with GitHub
      local_action:
        name: ansible-django-test
        module: github_key
        token: "{{ github_access_token }}"
        pubkey: "{{ ssh_pub_key.stdout }}"
    - name: Download app source code
      git:
        repo: "{{ app_repo }}"
        dest: "{{ repo_dir }}"
        update: yes
        version: master
      become: yes
      become_user: "{{ app_user }}"
    - name: Install poetry
      pip:
        name: poetry
    - name: Install python dependencies
      command: poetry install --no-dev --no-interaction
      args:
        chdir: "{{ repo_dir }}/django"
      become: yes
      become_user: "{{ app_user }}"
    - name: Migrate database
      command: poetry run python manage.py migrate
      args:
        chdir: "{{ repo_dir }}/django"
      become: yes
      become_user: "{{ app_user }}"
    - name: Start uwsgi server
      command: poetry run uwsgi uwsgi.ini
      args:
        chdir: "{{ repo_dir }}/django"
      become: yes
      become_user: "{{ app_user }}"
